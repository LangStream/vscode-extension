{
  "Document to json": {
    "prefix": [
      "document-to-json",
      "text-processors"
    ],
    "description": "This agent will convert an unstructured blob to text (like a pdf document) and convert it into a JSON structured string.\n",
    "body": [
      "- name: \"Convert to structured data\"",
      "\ttype: \"document-to-json\"",
      "\tinput: \"PROVIDE-VALUE\"",
      "\toutput: \"PROVIDE-VALUE\"",
      "\tconfiguration:",
      "\t\ttext-field: \"text\"",
      "\t\tcopy-properties: true"
    ]
  },
  "Query": {
    "prefix": [
      "query",
      "text-processors"
    ],
    "description": "Given a datasource specified in the application configuration, this agent enables submitting queries to that source and outputting the results.",
    "body": [
      "- name: \"Execute Query\"",
      "\ttype: \"query\"",
      "\tinput: \"PROVIDE-VALUE\"",
      "\toutput: \"PROVIDE-VALUE\"",
      "\tconfiguration:",
      "\t\tdatasource: \"PGDataSource\"",
      "\t\tquery: \"PROVIDE-VALUE\" # Example: \"SELECT * FROM products WHERE id = ?\"",
      "\t\tfields:",
        "\t\t\t- \"value.id\"",
      "\t\toutput-field: \"value.query-result\""
    ]
  },
  "Text extractor": {
    "prefix": [
    "text-extractor",
    "text-processors"
    ],
    "description": "This agent extracts document contents from a structured string of text.\n",
    "body": [
      "- name: \"Extract text\"",
      "\ttype: \"text-extractor\"",
      "\tinput: \"PROVIDE-VALUE\"",
      "\toutput: \"PROVIDE-VALUE\""
    ]
  },
  "Text normaliser": {
    "prefix": [
    "text-normaliser",
    "text-processors"
    ],
    "description": "This is an agent that applies specific transformations on text.",
    "body": [
      "- name: \"Normalize text\"",
      "\ttype: \"text-normaliser\"",
      "\tinput: \"PROVIDE-VALUE\"",
      "\toutput: \"PROVIDE-VALUE\"",
      "\tconfiguration:",
      "\t\tmake-lowercase: true",
      "\t\ttrim-spaces: true"
    ]
  },
  "Text splitter": {
    "prefix": [
    "text-splitter",
    "text-processors"
    ],
    "description": "This agent takes input text and splits it into sections based on a character count.\n",
    "body": [
      "- name: \"Split into chunks\"",
      "\ttype: \"text-splitter\"",
      "\tinput: \"PROVIDE-VALUE\"",
      "\toutput: \"PROVIDE-VALUE\"",
      "\tconfiguration:",
      "\t\tsplitter_type: \"RecursiveCharacterTextSplitter\"",
      "\t\tchunk_size: 10",
      "\t\tseparators: [\"\\n\\n\", \"\\n\", \" \", \"\"]",
      "\t\tkeep_separator: false",
      "\t\tchunk_overlap: 5",
      "\t\tlength_function: \"cl100k_base\""
    ]
  }
}